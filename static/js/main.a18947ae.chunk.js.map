{"version":3,"sources":["components/CurrentTime.js","Assets/WeatherIcons.js","components/WeatherCard.js","components/WeatherOverview.js","App.js","index.js"],"names":["CurrentTime","thetimezone","currentTime","Date","toLocaleString","timeZone","hour","minute","WeatherIcons","iconID","size","icon","color","animate","WeatherCard","data","city","iconType","current","weather","timezone","todaysDate","Intl","DateTimeFormat","weekday","day","month","year","format","dt","className","Math","round","temp","description","humidity","cities","amsterdam","longtitude","latitude","name","montreal","WeatherOverview","useState","setData","setLatitude","setLongtitude","setCity","useEffect","fetch","process","then","response","json","newData","handleOnClick","onClick","App","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"wOAyBeA,EApBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAIbC,GAAc,IAAIC,MAAOC,eAAe,QAAS,CACnDC,SAAU,CAACJ,GACXK,KAAM,UACNC,OAAQ,YAMZ,OACI,8BACKL,K,gBCoBEM,EAlCM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAwB9B,OACE,cAAC,IAAD,CACEC,KAzBa,CACf,MAAO,YACP,MAAO,YACP,MAAO,oBACP,MAAO,oBACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,OACP,MAAO,OACP,MAAO,MACP,MAAO,OAOUF,GACfG,MAAM,QACNF,KAAMA,EACNG,SAAS,KCHAC,EAzBK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAEnBC,EAAYF,EAAKG,QAAQC,QAAQ,GAAGR,KACpCS,EAAYL,EAAKK,SACjBC,EAAa,IAAIC,KAAKC,eAAe,QAAS,CAACC,QAAS,OAAQC,IAAK,UAAYC,MAAO,OAAQC,KAAM,YAAcC,OAAO,IAAIzB,KAAuB,IAAlBY,EAAKG,QAAQW,KAEvJ,OAEI,sBAAKC,UAAU,gBAAf,UAGI,4BAAIT,IACJ,6BAAKL,IACL,cAAC,EAAD,CAAaf,YAAemB,IAC5B,sBAAKU,UAAU,cAAf,UACA,8BAAIC,KAAKC,MAAMjB,EAAKG,QAAQe,MAA5B,aACA,4BAAIlB,EAAKG,QAAQC,QAAQ,GAAGe,cAC5B,cAAC,EAAD,CAAczB,OAAQQ,IACtB,2CAAcF,EAAKG,QAAQiB,SAA3B,eCrBNC,G,MAAS,CACbC,UAAW,CACTC,WAAY,OACZC,SAAU,OACVC,KAAM,aAERC,SAAU,CACRH,YAAa,QACbC,SAAU,QACVC,KAAM,cAoEKE,EAhES,WACtB,MAAwBC,qBAAxB,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAAgCD,mBAASP,EAAOK,SAASF,UAAzD,mBAAOA,EAAP,KAAiBM,EAAjB,KACA,EAAoCF,mBAASP,EAAOK,SAASH,YAA7D,mBAAOA,EAAP,KAAmBQ,EAAnB,KACA,EAAwBH,mBAASP,EAAOK,SAASD,MAAjD,mBAAOxB,EAAP,KAAa+B,EAAb,KACA,EAAwBJ,oBAAS,GAAjC,6BAYA,GARAK,qBAAU,WACRC,MAAM,uDAAD,OACoDV,EADpD,gBACoED,EADpE,uDAC6HY,qCAE/HC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAaV,EAAQU,QAC5B,CAACf,EAAUD,KAETvB,EAAM,OAAO,KAElB,IAAMwC,EAAgB,SAACvC,GACrB6B,EAAYT,EAAOpB,GAAMuB,UACzBO,EAAcV,EAAOpB,GAAMsB,YAC3BS,EAAQX,EAAOpB,GAAMwB,OAGvB,OACE,mCACE,sBAAKV,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,yBACEA,UAAU,aACV0B,QAAS,WACPD,EAAc,cAHlB,UAMG,IANH,2BASA,yBACEzB,UAAU,aACV0B,QAAS,WACPD,EAAc,aAHlB,UAMG,IANH,6BAgBF,qBAAKzB,UAAU,kBAAf,SACE,cAAC,EAAD,CAAaf,KAAMA,EAAMC,KAAMA,YCvD1ByC,EAbH,WAIV,OAEE,mCACE,8BAAK,cAAC,EAAD,SCFSC,SAASC,eAAe,QAI5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFJ,SAASC,eAAe,W","file":"static/js/main.a18947ae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//timezone  timezone_offset\r\n\r\n\r\nconst CurrentTime = ({ thetimezone }) => {\r\n\r\n    \r\n\r\n    const currentTime = new Date().toLocaleString('en-CA', {\r\n        timeZone: [thetimezone],\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        }\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {currentTime}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentTime\r\n","import React from 'react'\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\n\r\n\r\n\r\nconst WeatherIcons = ({ iconID, size}) => {\r\n  const iconCode = {\r\n    \"01d\": \"CLEAR_DAY\",\r\n    \"01n\": \"CLEAR_DAY\",\r\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\r\n    \"02n\": \"PARTLY_CLOUDY_DAY\",\r\n    \"03d\": \"CLOUDY\",\r\n    \"03n\": \"CLOUDY\",\r\n    \"04d\": \"CLOUDY\",\r\n    \"04n\": \"CLOUDY\",\r\n    \"09d\": \"RAIN\",\r\n    \"09n\": \"RAIN\",\r\n    \"10d\": \"RAIN\",\r\n    \"10n\": \"RAIN\",\r\n    \"11d\": \"RAIN\",\r\n    \"11n\": \"RAINY\",\r\n    \"13d\": \"SNOW\",\r\n    \"13n\": \"SNOW\",\r\n    \"50d\": \"FOG\",\r\n    \"50n\": \"FOG\",\r\n\r\n};\r\n\r\n\r\n  return (\r\n    <ReactAnimatedWeather\r\n      icon={iconCode[iconID]}\r\n      color=\"black\"\r\n      size={size}\r\n      animate={true}\r\n    />\r\n  );\r\n}\r\n\r\nexport default WeatherIcons","import React from 'react'\r\n\r\nimport CurrentTime from './CurrentTime'\r\nimport WeatherIcons from '../Assets/WeatherIcons'\r\n\r\n\r\n\r\nconst WeatherCard = ({ data, city}) => {\r\n\r\n    const iconType = (data.current.weather[0].icon)\r\n    const timezone = (data.timezone)\r\n    const todaysDate = new Intl.DateTimeFormat('en-UK', {weekday: 'long', day: '2-digit' , month: 'long', year: 'numeric'  }).format(new Date(data.current.dt * 1000))\r\n    \r\n    return (\r\n        \r\n        <div className='containerCard'>\r\n\r\n            \r\n            <p>{todaysDate}</p>\r\n            <h2>{city}</h2>\r\n            <CurrentTime thetimezone = {timezone} />\r\n            <div className='weatherOnly'>\r\n            <p>{Math.round(data.current.temp)} &deg; C</p>\r\n            <p>{data.current.weather[0].description}</p>\r\n            <WeatherIcons iconID={iconType} />\r\n            <p>humidity: {data.current.humidity} %</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport WeatherDetail from \"./WeatherDetail\";\r\n\r\nconst cities = {\r\n  amsterdam: {\r\n    longtitude: 4.8897,\r\n    latitude: 52.374,\r\n    name: \"Amsterdam\",\r\n  },\r\n  montreal: {\r\n    longtitude: -73.5878,\r\n    latitude: 45.5088,\r\n    name: \"Montreal\",\r\n  },\r\n};\r\n\r\nconst WeatherOverview = () => {\r\n  const [data, setData] = useState();\r\n  const [latitude, setLatitude] = useState(cities.montreal.latitude);\r\n  const [longtitude, setLongtitude] = useState(cities.montreal.longtitude);\r\n  const [city, setCity] = useState(cities.montreal.name);\r\n  const [show, setShow] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longtitude}&exclude=hourly,minutely&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((newData) => setData(newData));\r\n  }, [latitude, longtitude]);\r\n\r\n  if (!data) return null;\r\n\r\n  const handleOnClick = (city) => {\r\n    setLatitude(cities[city].latitude);\r\n    setLongtitude(cities[city].longtitude);\r\n    setCity(cities[city].name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"All\">\r\n        <div className=\"buttonContainer\">\r\n          <button\r\n            className=\"citybutton\"\r\n            onClick={() => {\r\n              handleOnClick(\"amsterdam\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            the weather Amsterdam\r\n          </button>\r\n          <button\r\n            className=\"citybutton\"\r\n            onClick={() => {\r\n              handleOnClick(\"montreal\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            the weather Montreal\r\n          </button>\r\n        </div>\r\n\r\n        {/* <div className=\"weatherDetail\" onClick={() => setShow(!show)}> */}\r\n          {/* <button className=\"button\">7-day forecast</button> */}\r\n          {/*  */}\r\n        {/* </div> */}\r\n\r\n        <div className=\"weatheroverview\">\r\n          <WeatherCard data={data} city={city} />\r\n        </div>\r\n\r\n        {/* {show && <WeatherDetail data={data} />} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherOverview;\r\n","import React from 'react'\nimport WeatherOverview from './components/WeatherOverview';\n\n\nconst App = () => {\n\n\n\n  return (\n\n    <>\n      <div><WeatherOverview /></div>\n    </>\n\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nconst rootElement = document.getElementById('root')\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}